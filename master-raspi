import time
import serial
import RPi.GPIO as GPIO
from tkinter import Tk, Label, Button

GPIO.setwarnings(False)
GPIO.setmode(GPIO.BOARD)
GPIO.setup(7, GPIO.OUT, initial=GPIO.HIGH)

send = serial.Serial(
    port='/dev/serial0',
    baudrate = 9600,
    parity=serial.PARITY_NONE,
    stopbits=serial.STOPBITS_ONE,
    bytesize=serial.EIGHTBITS,
    timeout=1
)


class TrafficLight:
    """Класс, реализующий логику светофора
   
    Attributes
    ----------
    id : int 
        ID светофора в системе города
    ----------
    
    Methods
    ----------
    change_light(light_id: int)
        Меняет свет светофора на указанный в id:
        0 - зеленый
        1 - желтый
        2 - красный 
    ----------
    """


    def __init__(self, id: int) -> None:
      self.id = id
    
    def change_light(self, light_id: int) -> None:
      send.write(str(self.id) + str(light_id))


class Barrier:
    """Класс, реализующий логику шлагбаума
   
    Attributes
    ----------
    id : int 
        ID шлагбаума в системе города
    ----------
    
    Methods
    ----------
    open()
        Открыть шлагбаум - выставить 0 градусов на сервоприводе
    
    close()
        Закрыть шлагбаум - выставить 90 градусов на сервоприводе
    ----------
    """


    open_id = 1
    close_id = 0

    def __init__(self, id: int) -> None:
       self.id = id

    def open() -> None:
       send.write(str(self.id) + str(open_id))

    def close() -> None:
       send.write(str(self.id) + str(close_id))
       

class RoadSign:
    """Класс, реализующий логику дорожного знака
    
    Attributes
    ----------
    id : int 
        ID знака в системе города
    ----------
    
    Methods
    ----------
    rotate()
        Повернуть знак на 180 градусов
    ----------
    """

    def __init__(self, id) -> None:
       self.id = id
    
    def rotate():
       send.write(str(self.id))
       

def main():
    root = Tk()
    root.title("Управление городом")
    root.geometry("400x400")

    barrier1 = Barrier(1)
    light1 = TrafficLight(2)
    sign1 = RoadSign(3)

    Label(root, text="Шлагбаум").pack()
    Button(root, text="Открыть", command=barrier1.open).pack()
    Button(root, text="Закрыть", command=barrier1.close).pack()

    Label(root, text="\nСветофор").pack()
    Button(root, text="Зеленый", command=lambda: light1.change_light(0)).pack()
    Button(root, text="Желтый", command=lambda: light1.change_light(1)).pack()
    Button(root, text="Красный", command=lambda: light1.change_light(2)).pack()

    Label(root, text="\nДорожный знак").pack()
    Button(root, text="Повернуть", command=sign1.rotate).pack()

    root.mainloop()

if __name__ == "__main__":
    main()
